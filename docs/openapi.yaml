openapi: 3.1.0
info:
  title: API Reference
  version: "1.0"
  summary: CRM
  description: |-
    Vessel's CRM APIs requires an access token to be used together with your Vessel API token. Ensure the following headers are provided when making API calls:

    Key | Value | Description
    ---------|----------|----------
     vessel-api-token | `<VESSEL_API_TOKEN>` | The API token provided by us
     
    Additionally, in the query or body parameters of each request depending on whether it is a GET or POST, make sure to include the `accessToken` for the connection you want to access.
servers:
  - url: "https://api.vessel.land"
paths:
  /crm/users:
    get:
      summary: Get All Users
      tags: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      $ref: "#/components/schemas/User"
                  nextPageCursor:
                    type: string
              examples:
                example-1:
                  value:
                    users:
                      - id: 6b48faf9e8dc534c4ca693c63e8bf8e6
                        nativeId: "12"
                        firstName: Micheal
                        lastName: Scott
                        email: micheal@dundermifflin.com
                        createdTime: "2019-08-24T14:15:22Z"
                        modifiedTime: "2019-08-24T14:15:22Z"
                        associations:
                          taskIds:
                            - b3b04a80af4190796185c527e7b9933c
                          noteIds:
                            - eb84649fd7a5145b93c349bde55dd88d
                          eventIds:
                            - e5db1d3933cf1f2c207ac5d333050efe
                        additional: {}
                    nextPageCursor: string
      operationId: get-crm-users
      parameters:
        - schema:
            type: string
          in: query
          name: accessToken
          required: true
          description: The token for the customer's CRM account. This was generated when they connected their account.
        - schema:
            type: string
          in: query
          name: cursor
        - schema:
            type: boolean
          in: query
          name: allFields
          description: Returns all fields including non-unifiable and custom fields under the "additional" property in the response
      description: Retrieve all Users
    parameters: []
  /crm/user:
    get:
      summary: Get User
      tags: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: "#/components/schemas/User"
              examples:
                example-1:
                  value:
                    user:
                      id: 6b48faf9e8dc534c4ca693c63e8bf8e6
                      nativeId: "12"
                      firstName: Micheal
                      lastName: Scott
                      email: micheal@dundermifflin.com
                      createdTime: "2019-08-24T14:15:22Z"
                      modifiedTime: "2019-08-24T14:15:22Z"
                      associations:
                        taskIds:
                          - b3b04a80af4190796185c527e7b9933c
                        noteIds:
                          - eb84649fd7a5145b93c349bde55dd88d
                        eventIds:
                          - e5db1d3933cf1f2c207ac5d333050efe
                      additional: {}
      operationId: get-user
      parameters:
        - schema:
            type: string
          in: query
          name: accessToken
          description: The token for the customer's CRM account. This was generated when they connected their account.
          required: true
        - schema:
            type: string
          in: query
          name: id
          required: true
        - schema:
            type: boolean
          in: query
          name: allFields
          description: Returns all fields including non-unifiable and custom fields under the "additional" property in the response
      description: Retrieve a single User by Id
    parameters: []
  /crm/user/details:
    get:
      summary: Get User Details
      tags: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  fields:
                    type: array
                    items:
                      $ref: "#/components/schemas/Field"
                  nextPageCursor:
                    type: string
              examples:
                example-1:
                  value:
                    fields:
                      - key: firstName
                        name: First name
                        type: string
                        options: null
                        isArray: false
                        custom: false
                        universal: true
                        creatable: true
                        updatable: true
                    nextPageCursor: string
      operationId: get-user-details
      description: |-
        Get details about all users. 

        Details include the type, possible values, and other meta data about the fields.
      parameters:
        - schema:
            type: string
          in: query
          name: accessToken
          description: "The token for the customer's CRM account. This was generated when they connected their account."
          required: true
        - schema:
            type: string
          in: query
          name: cursor
        - schema:
            type: boolean
          in: query
          name: allFields
          description: "Returns details about native fields."
  /crm/contacts:
    get:
      summary: Get All Contacts
      tags: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  contacts:
                    type: array
                    items:
                      $ref: "#/components/schemas/Contact"
                  nextPageCursor:
                    type: string
              examples:
                example-1:
                  value:
                    contacts:
                      - id: c064e916a0f93ddbd85c31963861d481
                        nativeId: "23"
                        email: tom@bluecross.com
                        firstName: Tom
                        lastName: Smith
                        jobTitle: Director of Operations
                        phone: "2101128833"
                        mobilePhone: "2106541111"
                        createdTime: "2019-08-24T14:15:22Z"
                        modifiedTime: "2019-08-24T14:15:22Z"
                        associations:
                          accountIds:
                            - 1fbdc2a6cb24a77f9c8843b35a00977b
                          dealIds:
                            - bb9c8b0f90fe8956498e5fe46f0464ee
                          leadIds:
                            - 710fea9e6bd3a756dc265c6d560f6bf6
                          noteIds:
                            - 07d76173e2285e7b75ebe23e93095d50
                          taskIds:
                            - 24f2bba2d256580f10095848bff0e570
                          eventIds:
                            - 502b5a1eab8de195a60d38610032f2c3
                          eventAttendeeIds:
                            - cccbc820f7ebd2525c66a69dbea198ce
                        additional: {}
                    nextPageCursor: string
      operationId: get-contacts
      parameters:
        - schema:
            type: string
          in: query
          name: accessToken
          description: The token for the customer's CRM account. This was generated when they connected their account.
          required: true
        - schema:
            type: string
          in: query
          name: cursor
        - schema:
            type: boolean
          in: query
          name: allFields
          description: Returns all fields including non-unifiable and custom fields under the "additional" property in the response
      description: Retrieve all Contacts
    parameters: []
  /crm/contact:
    get:
      summary: Get Contact
      tags: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  contact:
                    $ref: "#/components/schemas/Contact"
              examples:
                example-1:
                  value:
                    contact:
                      id: c064e916a0f93ddbd85c31963861d481
                      nativeId: "23"
                      email: tom@bluecross.com
                      firstName: Tom
                      lastName: Smith
                      jobTitle: Director of Operations
                      phone: "2101128833"
                      mobilePhone: "2106541111"
                      createdTime: "2019-08-24T14:15:22Z"
                      modifiedTime: "2019-08-24T14:15:22Z"
                      associations:
                        accountIds:
                          - 1fbdc2a6cb24a77f9c8843b35a00977b
                        dealIds:
                          - bb9c8b0f90fe8956498e5fe46f0464ee
                        leadIds:
                          - 710fea9e6bd3a756dc265c6d560f6bf6
                        noteIds:
                          - 07d76173e2285e7b75ebe23e93095d50
                        taskIds:
                          - 24f2bba2d256580f10095848bff0e570
                        eventIds:
                          - 502b5a1eab8de195a60d38610032f2c3
                        eventAttendeeIds:
                          - cccbc820f7ebd2525c66a69dbea198ce
                      additional: {}
      operationId: get-contact
      parameters:
        - schema:
            type: string
          in: query
          name: accessToken
          description: The token for the customer's CRM account. This was generated when they connected their account.
          required: true
        - schema:
            type: string
          in: query
          name: id
          description: The id of the contact to get (takes precedence over email when both are included)
        - schema:
            type: string
          in: query
          name: email
          description: The email of the contact to get (concedes precedence over id when both are included)
        - schema:
            type: boolean
          in: query
          name: allFields
          description: Returns all fields including non-unifiable and custom fields under the "additional" property in the response
      description: "Retrieve a Contact by either Id or email. When both email and Id are included, Id will take priority."
    parameters: []
    post:
      summary: Create Contact
      operationId: post-contact
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
              examples:
                example-1:
                  value:
                    id: "0"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                accessToken:
                  type: string
                contact:
                  $ref: "#/components/schemas/ContactCreate"
              required:
                - accessToken
                - contact
            examples:
              example-1:
                value:
                  accessToken: string
                  contact:
                    email: tom@bluecross.com
                    firstName: Tom
                    lastName: Smith
                    jobTitle: Director of Operations
                    phone: "2101128833"
                    mobilePhone: "2106541111"
      description: Create a new contact.
    patch:
      summary: Update Contact
      operationId: put-contact
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                description: ""
                type: object
                x-examples:
                  example-1:
                    id: "0"
                properties:
                  id:
                    type: string
                required:
                  - id
              examples:
                example-1:
                  value:
                    id: "0"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                accessToken:
                  type: string
                id:
                  type: string
                contact:
                  $ref: "#/components/schemas/ContactUpdate"
              required:
                - accessToken
                - id
                - contact
            examples:
              example-1:
                value:
                  accessToken: string
                  id: string
                  contact:
                    email: tom@bluecross.com
                    firstName: Tom
                    lastName: Smith
                    jobTitle: Director of Operations
                    phone: "2101128833"
                    mobilePhone: "2106541111"
          application/xml:
            schema:
              type: object
              properties: {}
        description: ""
      description: Update an existing Contact.
  /crm/contact/details:
    get:
      summary: Get Contact Details
      tags: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  fields:
                    type: array
                    items:
                      $ref: "#/components/schemas/Field"
                  nextPageCursor:
                    type: string
              examples:
                example-1:
                  value:
                    fields:
                      - key: firstName
                        name: First name
                        type: string
                        options: null
                        isArray: false
                        custom: false
                        universal: true
                        creatable: true
                        updatable: true
                    nextPageCursor: string
      operationId: get-contact-details
      description: |-
        Get details about all contacts. 

        Details include the type, possible values, and other meta data about the fields.
      parameters:
        - schema:
            type: string
          in: query
          name: accessToken
          description: "The token for the customer's CRM account. This was generated when they connected their account."
          required: true
        - schema:
            type: string
          in: query
          name: cursor
        - schema:
            type: boolean
          in: query
          name: allFields
          description: "Returns details about native fields."
  /crm/deals:
    get:
      summary: Get All Deals
      tags: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  deals:
                    type: array
                    items:
                      $ref: "#/components/schemas/Deal"
                  nextPageCursor:
                    type: string
              examples:
                example-1:
                  value:
                    deals:
                      - id: f97b667b7b53c2cae0280657a9fa4c3b
                        nativeId: "84"
                        name: Blue Cross Deal
                        stage: demo
                        amount: 10000
                        closeDate: "2020-08-23T00:00:00Z"
                        probability: "0.4"
                        expectedRevenue: 4000
                        isWon: false
                        isClosed: false
                        modifiedTime: "2019-08-24T14:15:22Z"
                        createdTime: "2019-08-24T14:15:22Z"
                        associations:
                          contactIds:
                            - 48fabaa6eec4d244ec0c67d7beffec41
                          accountIds:
                            - 8019fa47ac77b2d438d049a31727cbc5
                          noteIds:
                            - 0c8fd760aec8ba0ee534e9e71f3dc8f4
                          taskIds:
                            - 7cf4f54538b03dd8780b2b25304a788b
                          eventIds:
                            - 3567fd27ace6e5698258de221668d8f4
                        additional: {}
                    nextPageCursor: string
      operationId: get-crm-deals
      parameters:
        - schema:
            type: string
          in: query
          name: accessToken
          description: The token for the customer's CRM account. This was generated when they connected their account.
          required: true
        - schema:
            type: string
          in: query
          name: cursor
        - schema:
            type: boolean
          in: query
          name: allFields
          description: Returns all fields including non-unifiable and custom fields under the "additional" property in the response
      description: Retrieve all Deals
    parameters: []
  /crm/deal:
    get:
      summary: Get Deal
      tags: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  deal:
                    $ref: "#/components/schemas/Deal"
              examples:
                example-1:
                  value:
                    deal:
                      id: f97b667b7b53c2cae0280657a9fa4c3b
                      nativeId: "84"
                      name: Blue Cross Deal
                      stage: demo
                      amount: 10000
                      closeDate: "2020-08-23T00:00:00Z"
                      probability: "0.4"
                      expectedRevenue: 4000
                      isWon: false
                      isClosed: false
                      modifiedTime: "2019-08-24T14:15:22Z"
                      createdTime: "2019-08-24T14:15:22Z"
                      associations:
                        contactIds:
                          - 48fabaa6eec4d244ec0c67d7beffec41
                        accountIds:
                          - 8019fa47ac77b2d438d049a31727cbc5
                        noteIds:
                          - 0c8fd760aec8ba0ee534e9e71f3dc8f4
                        taskIds:
                          - 7cf4f54538b03dd8780b2b25304a788b
                        eventIds:
                          - 3567fd27ace6e5698258de221668d8f4
                      additional: {}
      operationId: get-deal
      parameters:
        - schema:
            type: string
          in: query
          name: accessToken
          description: The token for the customer's CRM account. This was generated when they connected their account.
          required: true
        - schema:
            type: string
          in: query
          name: id
          required: true
        - schema:
            type: boolean
          in: query
          name: allFields
          description: Returns all fields including non-unifiable and custom fields under the "additional" property in the response
      description: Retrieve a single Deal by Id
    parameters: []
    post:
      summary: Create Deal
      operationId: post-deal
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                description: ""
                type: object
                x-examples:
                  example-1:
                    id: "0"
                properties:
                  id:
                    type: string
                required:
                  - id
              examples:
                example-1:
                  value:
                    id: "0"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                accessToken:
                  type: string
                deal:
                  $ref: "#/components/schemas/DealCreate"
              required:
                - accessToken
                - deal
            examples:
              example-1:
                value:
                  accessToken: string
                  deal:
                    name: Blue Cross Deal
                    amount: 10000
                    closeDate: "2020-08-23T00:00:00Z"
                    probability: "0.4"
                    stage: closedwon
                    accountId: "8019fa47ac77b2d438d049a31727cbc5"
      description: Create a new Deal
    patch:
      summary: Update Deal
      operationId: put-deal
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                description: ""
                type: object
                x-examples:
                  example-1:
                    id: "0"
                properties:
                  id:
                    type: string
                required:
                  - id
              examples:
                example-1:
                  value:
                    id: "0"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                accessToken:
                  type: string
                id:
                  type: string
                deal:
                  $ref: "#/components/schemas/DealUpdate"
              required:
                - accessToken
                - id
                - deal
            examples:
              example-1:
                value:
                  accessToken: string
                  id: string
                  deal:
                    name: Blue Cross Deal
                    amount: 10000
                    closeDate: "2020-08-23T00:00:00Z"
                    probability: "0.4"
                    accountId: "8019fa47ac77b2d438d049a31727cbc5"
        description: ""
      description: Update an existing Deal
  /crm/deal/details:
    get:
      summary: Get Deal Details
      tags: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  fields:
                    type: array
                    items:
                      $ref: "#/components/schemas/Field"
                  nextPageCursor:
                    type: string
              examples:
                example-1:
                  value:
                    fields:
                      - key: amount
                        name: Amount
                        type: number
                        options: null
                        isArray: false
                        custom: false
                        universal: true
                        creatable: true
                        updatable: true
                    nextPageCursor: string
      operationId: get-deal-details
      description: |-
        Get details about all deals or a particular deal. 

        Details include the type, possible values, and other meta data about the fields.
      parameters:
        - schema:
            type: string
          in: query
          name: accessToken
          description: "The token for the customer's CRM account. This was generated when they connected their account."
          required: true
        - schema:
            type: string
          in: query
          name: id
          description: "If provided, get the details about a particular deal. If not provided, get details about all deals."
        - schema:
            type: string
          in: query
          name: cursor
        - schema:
            type: boolean
          in: query
          name: allFields
          description: "Returns details about native fields."
  /crm/accounts:
    get:
      summary: Get All Accounts
      tags: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  accounts:
                    type: array
                    items:
                      $ref: "#/components/schemas/Account"
                  nextPageCursor:
                    type: string
              examples:
                example-1:
                  value:
                    accounts:
                      - id: b2d9eabb468030e65fa36ff7183826e0
                        nativeId: "344"
                        name: Blue Cross
                        description: Blue Cross of Pennsylvania is responsible for providing services to the good people of Scranton
                        industry: TV and Media
                        annualRevenue: 10000000
                        numberOfEmployees: 100
                        website: www.bluecross.penn
                        createdTime: "2019-08-24T14:15:22Z"
                        modifiedTime: "2019-08-24T14:15:22Z"
                        phone: "8192223333"
                        address:
                          street: 100 Blue Dr
                          city: Scranton
                          state: Pennsylvania
                          postalCode: "281332"
                          country: USA
                        associations:
                          dealIds:
                            - c59e003883004e33204e87350ca29777
                          contactIds:
                            - 048a9a404f11c8ff84b4353f768d2066
                          noteIds:
                            - 0942a3fb764cb58539338ad56b81ca5e
                          taskIds:
                            - 2338ee55636bef55f0ffab4e782458d7
                          leadIds:
                            - 3b6e39123631efe4f82e16caab553f08
                          eventIds:
                            - 8de75611be060242c74b56fa7feb9d39
                        additional: {}
                    nextPageCursor: string
      operationId: get-crm-accounts
      parameters:
        - schema:
            type: string
          in: query
          name: accessToken
          description: The token for the customer's CRM account. This was generated when they connected their account.
          required: true
        - schema:
            type: string
          in: query
          name: cursor
        - schema:
            type: boolean
          in: query
          name: allFields
          description: Returns all fields including non-unifiable and custom fields under the "additional" property in the response
      description: |-
        Retrieve all Accounts

        *CRM Caveats*:
        - Pipedrive: dealIds + contactIds not supported when querying for all accounts
    parameters: []
  /crm/account:
    get:
      summary: Get Account
      tags: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  account:
                    $ref: "#/components/schemas/Account"
              examples:
                example-1:
                  value:
                    account:
                      id: b2d9eabb468030e65fa36ff7183826e0
                      nativeId: "344"
                      name: Blue Cross
                      description: Blue Cross of Pennsylvania is responsible for providing services to the good people of Scranton
                      industry: TV and Media
                      annualRevenue: 10000000
                      numberOfEmployees: 100
                      website: www.bluecross.penn
                      createdTime: "2019-08-24T14:15:22Z"
                      modifiedTime: "2019-08-24T14:15:22Z"
                      phone: "8192223333"
                      address:
                        street: 100 Blue Dr
                        city: Scranton
                        state: Pennsylvania
                        postalCode: "281332"
                        country: USA
                      associations:
                        dealIds:
                          - c59e003883004e33204e87350ca29777
                        contactIds:
                          - 048a9a404f11c8ff84b4353f768d2066
                        noteIds:
                          - 0942a3fb764cb58539338ad56b81ca5e
                        taskIds:
                          - 2338ee55636bef55f0ffab4e782458d7
                        leadIds:
                          - 3b6e39123631efe4f82e16caab553f08
                        eventIds:
                          - 8de75611be060242c74b56fa7feb9d39
                      additional: {}
      operationId: get-account
      parameters:
        - schema:
            type: string
          in: query
          required: true
          name: accessToken
          description: The token for the customer's CRM account. This was generated when they connected their account.
        - schema:
            type: string
          in: query
          name: id
          required: true
        - schema:
            type: boolean
          in: query
          name: allFields
          description: Returns all fields including non-unifiable and custom fields under the "additional" property in the response
      description: Retrieve a single Account by Id
    parameters: []
    post:
      summary: Create Account
      operationId: post-account
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                description: ""
                type: object
                x-examples:
                  example-1:
                    id: "0"
                properties:
                  id:
                    type: string
              examples:
                example-1:
                  value:
                    id: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                accessToken:
                  type: string
                account:
                  $ref: "#/components/schemas/AccountCreate"
              required:
                - accessToken
                - account
            examples:
              example-1:
                value:
                  accessToken: string
                  account:
                    name: Blue Cross
                    description: Blue Cross of Pennsylvania is responsible for providing services to the good people of Scranton
                    industry: TV and Media
                    annualRevenue: 10000000
                    numberOfEmployees: 100
                    website: www.bluecross.penn
                    phone: "8192223333"
                    address:
                      street: 100 Blue Dr
                      city: Scranton
                      state: Pennsylvania
                      postalCode: "281332"
                      country: USA
      description: Create a new Account
    patch:
      summary: Update Account
      operationId: put-account
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                description: ""
                type: object
                x-examples:
                  example-1:
                    id: "0"
                properties:
                  id:
                    type: string
                required:
                  - id
              examples:
                example-1:
                  value:
                    id: "0"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                accessToken:
                  type: string
                id:
                  type: string
                account:
                  $ref: "#/components/schemas/AccountUpdate"
              required:
                - accessToken
                - id
                - account
            examples:
              example-1:
                value:
                  accessToken: string
                  id: string
                  account:
                    name: Blue Cross
                    description: Blue Cross of Pennsylvania is responsible for providing services to the good people of Scranton
                    industry: TV and Media
                    annualRevenue: 10000000
                    numberOfEmployees: 100
                    website: www.bluecross.penn
                    createdTime: "2019-08-24T14:15:22Z"
                    modifiedTime: "2019-08-24T14:15:22Z"
                    phone: "8192223333"
                    address:
                      street: 100 Blue Dr
                      city: Scranton
                      state: Pennsylvania
                      postalCode: "281332"
                      country: USA
      description: Update an existing Account
      parameters: []
  /crm/account/details:
    get:
      summary: Get Account Details
      tags: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  fields:
                    type: array
                    items:
                      $ref: "#/components/schemas/Field"
                  nextPageCursor:
                    type: string
              examples:
                example-1:
                  value:
                    fields:
                      - key: name
                        name: Name
                        type: string
                        options: null
                        isArray: false
                        custom: false
                        universal: true
                        creatable: true
                        updatable: true
                    nextPageCursor: string
      operationId: get-account-details
      description: |-
        Get details about all accounts. 

        Details include the type, possible values, and other meta data about the fields.
      parameters:
        - schema:
            type: string
          in: query
          name: accessToken
          description: "The token for the customer's CRM account. This was generated when they connected their account."
          required: true
        - schema:
            type: string
          in: query
          name: cursor
        - schema:
            type: boolean
          in: query
          name: allFields
          description: "Returns details about native fields."
  /crm/leads:
    get:
      summary: Get All Leads
      tags: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  leads:
                    type: array
                    items:
                      $ref: "#/components/schemas/Lead"
                  nextPageCursor:
                    type: string
              examples:
                example-1:
                  value:
                    leads:
                      - id: 573de1b49555e84fccd76c47f8bac0a2
                        nativeId: "23"
                        firstName: Tom
                        lastName: Smith
                        jobTitle: Director of Operations
                        email: tom@bluecross.com
                        account: Blue Cross
                        phone: "1234445555"
                        mobilePhone: "2338889999"
                        createdTime: "2019-08-24T14:15:22Z"
                        modifiedTime: "2019-08-24T14:15:22Z"
                        associations:
                          contactIds:
                            - 3e530bfc11fdb21bbc8d28dd6dde491a
                          accountIds:
                            - 19b2822fc02e1b032f312b1667996415
                          noteIds:
                            - 516ca443f07a4f6ecf32d13ac365ae61
                          taskIds:
                            - 09a43cce3a886c9816c782e019f8755f
                          eventIds:
                            - 84ef4f971bd77a046fdf4a20a89c80d6
                          eventAttendeeIds:
                            - 9a73be51665b57dd1d4df0edc67d5e4a
                        additional: {}
                    nextPageCursor: string
      operationId: get-crm-leads
      description: |-
        Retrieve all leads.

        *CRM Caveats*:
        - Pipedrive: Only `jobTitle` is returned when querying for all leads
      parameters:
        - schema:
            type: string
          in: query
          name: accessToken
          description: The token for the customer's CRM account. This was generated when they connected their account.
          required: true
        - schema:
            type: string
          in: query
          name: cursor
        - schema:
            type: boolean
          in: query
          name: allFields
          description: Returns all fields including non-unifiable and custom fields under the "additional" property in the response
  /crm/lead:
    get:
      summary: Get Lead
      tags: []
      responses:
        "200":
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  lead:
                    $ref: "#/components/schemas/Lead"
              examples:
                example-1:
                  value:
                    lead:
                      id: 573de1b49555e84fccd76c47f8bac0a2
                      nativeId: "23"
                      firstName: Tom
                      lastName: Smith
                      jobTitle: Director of Operations
                      email: tom@bluecross.com
                      account: Blue Cross
                      phone: "1234445555"
                      mobilePhone: "2338889999"
                      createdTime: "2019-08-24T14:15:22Z"
                      modifiedTime: "2019-08-24T14:15:22Z"
                      associations:
                        contactIds:
                          - 3e530bfc11fdb21bbc8d28dd6dde491a
                        accountIds:
                          - 19b2822fc02e1b032f312b1667996415
                        noteIds:
                          - 516ca443f07a4f6ecf32d13ac365ae61
                        taskIds:
                          - 09a43cce3a886c9816c782e019f8755f
                        eventIds:
                          - 84ef4f971bd77a046fdf4a20a89c80d6
                        eventAttendeeIds:
                          - 9a73be51665b57dd1d4df0edc67d5e4a
                      additional: {}
      operationId: get-lead
      description: Retrieve a single Lead by Id
      parameters:
        - schema:
            type: string
          in: query
          name: accessToken
          description: The token for the customer's CRM account. This was generated when they connected their account.
          required: true
        - schema:
            type: string
          in: query
          name: id
          required: true
        - schema:
            type: boolean
          in: query
          name: allFields
          description: Returns all fields including non-unifiable and custom fields under the "additional" property in the response
    post:
      summary: Create Lead
      operationId: post-lead
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                description: ""
                type: object
                x-examples:
                  example-1:
                    id: "0"
                properties:
                  id:
                    type: string
                required:
                  - id
              examples:
                example-1:
                  value:
                    id: string
      description: Create a new Lead
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                accessToken:
                  type: string
                lead:
                  $ref: "#/components/schemas/LeadCreate"
              required:
                - accessToken
                - lead
            examples:
              example-1:
                value:
                  accessToken: string
                  lead:
                    firstName: Tom
                    lastName: Smith
                    jobTitle: Director of Operations
                    email: tom@bluecross.com
                    account: Blue Cross
                    phone: "1234445555"
                    mobilePhone: "2338889999"
    patch:
      summary: Update Lead
      operationId: put-lead
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                description: ""
                type: object
                x-examples:
                  example-1:
                    id: "0"
                properties:
                  id:
                    type: string
                required:
                  - id
              examples:
                example-1:
                  value:
                    id: "0"
      description: Update an existing Lead by Id
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                accessToken:
                  type: string
                lead:
                  $ref: "#/components/schemas/LeadUpdate"
            examples:
              example-1:
                value:
                  accessToken: string
                  lead:
                    firstName: Tom
                    lastName: Smith
                    jobTitle: Director of Operations
                    email: tom@bluecross.com
                    account: Blue Cross
                    phone: "1234445555"
                    mobilePhone: "2338889999"
  /crm/lead/details:
    get:
      summary: Get Lead Details
      tags: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  fields:
                    type: array
                    items:
                      $ref: "#/components/schemas/Field"
                  nextPageCursor:
                    type: string
              examples:
                example-1:
                  value:
                    fields:
                      - key: firstName
                        name: First Name
                        type: string
                        options: null
                        isArray: false
                        custom: false
                        universal: true
                        creatable: true
                        updatable: true
                    nextPageCursor: string
      operationId: get-lead-details
      description: |-
        Get details about all leads. 

        Details include the type, possible values, and other meta data about the fields.
      parameters:
        - schema:
            type: string
          in: query
          name: accessToken
          description: "The token for the customer's CRM account. This was generated when they connected their account."
          required: true
        - schema:
            type: string
          in: query
          name: cursor
        - schema:
            type: boolean
          in: query
          name: allFields
          description: "Returns details about native fields."
  /crm/notes:
    get:
      summary: Get All Notes
      tags: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  notes:
                    type: array
                    items:
                      $ref: "#/components/schemas/Note"
                  nextPageCursor:
                    type: string
              examples:
                example-1:
                  value:
                    notes:
                      - id: 64e620997e69e749d5fac9f6bedfd8bb
                        nativeId: "34"
                        content: This note has some interesting content in it!
                        modifiedTime: "2019-08-24T14:15:22Z"
                        createdTime: "2019-08-24T14:15:22Z"
                        associations:
                          dealIds:
                            - 614e0d537ed844b4c1f870c0cf789aee
                          contactIds:
                            - cf88a16a73f1352596111c2eaa4d9cc5
                          accountIds:
                            - f23ac239fa5e29e04663d9cd04d08221
                          leadIds:
                            - 50addb0347d52e51e57e6c5406640437
                          ownerUserId: fdabe0c18113ee0f2add83729401d5e2
                        additional: {}
                    nextPageCursor: string
      operationId: get-crm-notes
      description: Retrieve all Notes
      parameters:
        - schema:
            type: string
          in: query
          name: accessToken
          description: The token for the customer's CRM account. This was generated when they connected their account.
          required: true
        - schema:
            type: string
          in: query
          name: cursor
        - schema:
            type: boolean
          in: query
          name: allFields
          description: Returns all fields including non-unifiable and custom fields under the "additional" property in the response
  /crm/note:
    get:
      summary: Get Note
      tags: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  note:
                    $ref: "#/components/schemas/Note"
              examples:
                example-1:
                  value:
                    note:
                      id: 64e620997e69e749d5fac9f6bedfd8bb
                      nativeId: "34"
                      content: This note has some interesting content in it!
                      modifiedTime: "2019-08-24T14:15:22Z"
                      createdTime: "2019-08-24T14:15:22Z"
                      associations:
                        dealIds:
                          - 614e0d537ed844b4c1f870c0cf789aee
                        contactIds:
                          - cf88a16a73f1352596111c2eaa4d9cc5
                        accountIds:
                          - f23ac239fa5e29e04663d9cd04d08221
                        leadIds:
                          - 50addb0347d52e51e57e6c5406640437
                        ownerUserId: fdabe0c18113ee0f2add83729401d5e2
                      additional: {}
      operationId: get-note
      parameters:
        - schema:
            type: string
          in: query
          name: accessToken
          description: The token for the customer's CRM account. This was generated when they connected their account.
          required: true
        - schema:
            type: string
          in: query
          name: id
          required: true
        - schema:
            type: boolean
          in: query
          name: allFields
          description: Returns all fields including non-unifiable and custom fields under the "additional" property in the response
      description: Retrieve a single Note by Id
    post:
      summary: Create Note
      operationId: post-note
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                description: ""
                type: object
                x-examples:
                  example-1:
                    id: "0"
                properties:
                  id:
                    type: string
                required:
                  - id
              examples:
                example-1:
                  value:
                    id: "0"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                accessToken:
                  type: string
                note:
                  $ref: "#/components/schemas/NoteCreate"
              required:
                - accessToken
                - note
            examples:
              example-1:
                value:
                  accessToken: string
                  note:
                    content: This note has some interesting content in it!
                    userId: fdabe0c18113ee0f2add83729401d5e2
                    dealId: 614e0d537ed844b4c1f870c0cf789aee
                    leadId: 50addb0347d52e51e57e6c5406640437
                    accountId: f23ac239fa5e29e04663d9cd04d08221
                    contactId: cf88a16a73f1352596111c2eaa4d9cc5
        description: ""
      description: |-
        Create a new Note.

        *CRM Caveats*:
        - Salesforce: You may only associate a Note with one entity.
    patch:
      summary: Update Note
      operationId: put-note
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                description: ""
                type: object
                x-examples:
                  example-1:
                    id: "0"
                properties:
                  id:
                    type: string
                required:
                  - id
              examples:
                example-1:
                  value:
                    id: "0"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                accessToken:
                  type: string
                id:
                  type: string
                note:
                  $ref: "#/components/schemas/NoteUpdate"
              required:
                - accessToken
                - id
                - note
            examples:
              example-1:
                value:
                  accessToken: string
                  id: string
                  note:
                    content: This note has some interesting content in it!
                    userId: fdabe0c18113ee0f2add83729401d5e2
      description: Update an existing Note by Id
  /crm/note/details:
    get:
      summary: Get Note Details
      tags: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  fields:
                    type: array
                    items:
                      $ref: "#/components/schemas/Field"
                  nextPageCursor:
                    type: string
              examples:
                example-1:
                  value:
                    fields:
                      - key: content
                        name: Content
                        type: string
                        options: null
                        isArray: false
                        custom: false
                        universal: true
                        creatable: true
                        updatable: true
                    nextPageCursor: string
      operationId: get-note-details
      description: |-
        Get details about all notes. 

        Details include the type, possible values, and other meta data about the fields.
      parameters:
        - schema:
            type: string
          in: query
          name: accessToken
          description: "The token for the customer's CRM account. This was generated when they connected their account."
          required: true
        - schema:
            type: string
          in: query
          name: cursor
        - schema:
            type: boolean
          in: query
          name: allFields
          description: "Returns details about native fields."
  /crm/tasks:
    get:
      summary: Get All Tasks
      tags: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  tasks:
                    type: array
                    items:
                      $ref: "#/components/schemas/Task"
                  nextPageCursor:
                    type: string
              examples:
                example-1:
                  value:
                    tasks:
                      - id: b5a4e4a2d54c0b2391162954f1ff76a2
                        nativeId: "122"
                        body: This task needs to be done very soon!
                        subject: High Priority Task
                        isDone: false
                        dueDate: "2019-09-24T14:15:22Z"
                        status: Not Done
                        priority: High
                        modifiedTime: "2019-08-24T14:15:22Z"
                        createdTime: "2019-08-24T14:15:22Z"
                        associations:
                          dealIds:
                            - d3eb15b42607b6147596c226166c7ba2
                          contactIds:
                            - 3bd3cf14ee9cc889269c52e3f4018b27
                          accountIds:
                            - 432ba6928b33aecfca646431e68dc829
                          leadIds:
                            - afa79f2dda94b0e5b48b930fa05ceafa
                          ownerUserId: 25db6b521ffb8fd4f916345341a935f7
                        additional: {}
                    nextPageCursor: string
      operationId: get-crm-tasks
      description: Retrieve all Tasks
      parameters:
        - schema:
            type: string
          in: query
          name: accessToken
          description: The token for the customer's CRM account. This was generated when they connected their account.
          required: true
        - schema:
            type: string
          in: query
          name: cursor
        - schema:
            type: boolean
          in: query
          name: allFields
          description: Returns all fields including non-unifiable and custom fields under the "additional" property in the response
    parameters: []
  /crm/task:
    get:
      summary: Get Task
      tags: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  task:
                    $ref: "#/components/schemas/Task"
              examples:
                example-1:
                  value:
                    task:
                      id: b5a4e4a2d54c0b2391162954f1ff76a2
                      nativeId: "122"
                      body: This task needs to be done very soon!
                      subject: High Priority Task
                      isDone: false
                      dueDate: "2019-09-24T14:15:22Z"
                      status: Not Done
                      priority: High
                      modifiedTime: "2019-08-24T14:15:22Z"
                      createdTime: "2019-08-24T14:15:22Z"
                      associations:
                        dealIds:
                          - d3eb15b42607b6147596c226166c7ba2
                        contactIds:
                          - 3bd3cf14ee9cc889269c52e3f4018b27
                        accountIds:
                          - 432ba6928b33aecfca646431e68dc829
                        leadIds:
                          - afa79f2dda94b0e5b48b930fa05ceafa
                        ownerUserId: 25db6b521ffb8fd4f916345341a935f7
                      additional: {}
      operationId: get-task
      parameters:
        - schema:
            type: string
          in: query
          name: accessToken
          description: The token for the customer's CRM account. This was generated when they connected their account.
          required: true
        - schema:
            type: string
          in: query
          name: id
          required: true
        - schema:
            type: boolean
          in: query
          name: allFields
          description: Returns all fields including non-unifiable and custom fields under the "additional" property in the response
      description: Retrieve a single Task by Id
    post:
      summary: Create Task
      operationId: post-task
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                description: ""
                type: object
                x-examples:
                  example-1:
                    id: "0"
                properties:
                  id:
                    type: string
                required:
                  - id
              examples:
                example-1:
                  value:
                    id: "0"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                accessToken:
                  type: string
                task:
                  $ref: "#/components/schemas/TaskCreate"
              required:
                - accessToken
            examples:
              example-1:
                value:
                  accessToken: string
                  task:
                    body: This task needs to be done very soon!
                    subject: High Priority Task
                    dueDate: "2019-09-24T14:15:22Z"
                    isDone: false
                    userId: 25db6b521ffb8fd4f916345341a935f7
                    leadId: afa79f2dda94b0e5b48b930fa05ceafa
                    dealId: d3eb15b42607b6147596c226166c7ba2
                    accountId: 432ba6928b33aecfca646431e68dc829
                    contactId: 3bd3cf14ee9cc889269c52e3f4018b27
                    priority: High
                    status: Not Done
        description: ""
      description: |-
        Create a new Task.

        *CRM Caveats*:
        - Salesforce: You may only associate a Task with either a Lead or a Contact *and* either a Deal or an Account.
    patch:
      summary: Update Task
      operationId: put-task
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                description: ""
                type: object
                x-examples:
                  example-1:
                    id: "0"
                properties:
                  id:
                    type: string
                required:
                  - id
              examples:
                example-1:
                  value:
                    id: "0"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                accessToken:
                  type: string
                id:
                  type: string
                task:
                  $ref: "#/components/schemas/TaskUpdate"
              required:
                - accessToken
                - id
            examples:
              example-1:
                value:
                  accessToken: string
                  id: string
                  task:
                    body: This task needs to be done very soon!
                    subject: High Priority Task
                    dueDate: "2019-09-24T14:15:22Z"
                    isDone: false
                    userId: 25db6b521ffb8fd4f916345341a935f7
                    priority: High
                    status: Not Done
      description: Update an existing Task by Id
    parameters: []
  /crm/task/details:
    get:
      summary: Get Task Details
      tags: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  fields:
                    type: array
                    items:
                      $ref: "#/components/schemas/Field"
                  nextPageCursor:
                    type: string
              examples:
                example-1:
                  value:
                    fields:
                      - key: subject
                        name: Subject
                        type: string
                        options: null
                        isArray: false
                        custom: false
                        universal: true
                        creatable: true
                        updatable: true
                    nextPageCursor: string
      operationId: get-task-details
      description: |-
        Get details about all tasks. 

        Details include the type, possible values, and other meta data about the fields.
      parameters:
        - schema:
            type: string
          in: query
          name: accessToken
          description: "The token for the customer's CRM account. This was generated when they connected their account."
          required: true
        - schema:
            type: string
          in: query
          name: cursor
        - schema:
            type: boolean
          in: query
          name: allFields
          description: "Returns details about native fields."
  /crm/events:
    get:
      summary: Get All Events
      tags: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  events:
                    type: array
                    items:
                      $ref: "#/components/schemas/Event"
                  nextPageCursor:
                    type: string
              examples:
                example-1:
                  value:
                    events:
                      - id: 18e81ebacaf668919bf5bfb450e46e70
                        nativeId: "19"
                        subject: Meeting with Blue Cross
                        description: Going to get tea with Tom from Blue Cross to discuss his paper needs
                        type: Meeting
                        location: 1122 Tea Dr
                        startDateTime: "2019-08-24T14:15:22Z"
                        endDateTime: "2019-08-24T14:15:22Z"
                        isAllDayEvent: true
                        createdTime: "2019-08-24T14:15:22Z"
                        modifiedTime: "2019-08-24T14:15:22Z"
                        associations:
                          accountIds:
                            - 48e360b6458763af2fabe1468580162a
                          leadIds:
                            - e4292594a425de320dccf0ff4dd1bb99
                          contactIds:
                            - 3fd7f63bfcda56afe955220b370b0e86
                          dealIds:
                            - 1fef18eba546440ec37e504bc411262e
                          eventAttendeeIds:
                            - 9c315a6f3669114b8d0641f91e85647b
                          ownerUserId: 5561946e7c65ba50544584543859074c
                        additional: {}
                    nextPageCursor: string
      operationId: get-crm-events
      description: Retrieve all Events
      parameters:
        - schema:
            type: string
          in: query
          name: accessToken
          description: The token for the customer's CRM account. This was generated when they connected their account.
        - schema:
            type: string
          in: query
          name: cursor
        - schema:
            type: boolean
          in: query
          name: allFields
          description: Returns all fields including non-unifiable and custom fields under the "additional" property in the response
  /crm/event:
    get:
      summary: Get Event
      tags: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  event:
                    $ref: "#/components/schemas/Event"
              examples:
                example-1:
                  value:
                    event:
                      id: 18e81ebacaf668919bf5bfb450e46e70
                      nativeId: "19"
                      subject: Meeting with Blue Cross
                      description: Going to get tea with Tom from Blue Cross to discuss his paper needs
                      type: Meeting
                      location: 1122 Tea Dr
                      startDateTime: "2019-08-24T14:15:22Z"
                      endDateTime: "2019-08-24T14:15:22Z"
                      isAllDayEvent: true
                      createdTime: "2019-08-24T14:15:22Z"
                      modifiedTime: "2019-08-24T14:15:22Z"
                      associations:
                        accountIds:
                          - 48e360b6458763af2fabe1468580162a
                        leadIds:
                          - e4292594a425de320dccf0ff4dd1bb99
                        contactIds:
                          - 3fd7f63bfcda56afe955220b370b0e86
                        dealIds:
                          - 1fef18eba546440ec37e504bc411262e
                        eventAttendeeIds:
                          - 9c315a6f3669114b8d0641f91e85647b
                        ownerUserId: 5561946e7c65ba50544584543859074c
                      additional: {}
      operationId: get-event
      parameters:
        - schema:
            type: string
          in: query
          name: accessToken
          description: The token for the customer's CRM account. This was generated when they connected their account.
          required: true
        - schema:
            type: string
          in: query
          name: id
          required: true
        - schema:
            type: boolean
          in: query
          name: allFields
          description: Returns all fields including non-unifiable and custom fields under the "additional" property in the response
      description: Retrieve a single Event by Id
    post:
      summary: Create Event
      operationId: post-event
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                description: ""
                type: object
                x-examples:
                  example-1:
                    id: "0"
                properties:
                  id:
                    type: string
                required:
                  - id
              examples:
                example-1:
                  value:
                    id: "0"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                accessToken:
                  type: string
                event:
                  $ref: "#/components/schemas/EventCreate"
              required:
                - accessToken
            examples:
              example-1:
                value:
                  accessToken: string
                  event:
                    subject: Meeting with Blue Cross
                    description: Going to get tea with Tom from Blue Cross to discuss his paper needs
                    type: Meeting
                    location: 1122 Tea Dr
                    startDateTime: "2019-08-24T14:15:22Z"
                    endDateTime: "2019-08-24T14:15:22Z"
                    isAllDayEvent: true
                    dealId: 1fef18eba546440ec37e504bc411262e
                    accountId: 48e360b6458763af2fabe1468580162a
                    contactId: 3fd7f63bfcda56afe955220b370b0e86
                    leadId: e4292594a425de320dccf0ff4dd1bb99
                    ownerUserId: 5561946e7c65ba50544584543859074c
        description: ""
      description: Create a new Event.
    patch:
      summary: Update Event
      operationId: put-event
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                description: ""
                type: object
                x-examples:
                  example-1:
                    id: "0"
                properties:
                  id:
                    type: string
                required:
                  - id
              examples:
                example-1:
                  value:
                    id: "0"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                accessToken:
                  type: string
                id:
                  type: string
                event:
                  $ref: "#/components/schemas/EventUpdate"
              required:
                - accessToken
                - id
            examples:
              example-1:
                value:
                  accessToken: string
                  id: string
                  event:
                    subject: Meeting with Blue Cross
                    description: Going to get tea with Tom from Blue Cross to discuss his paper needs
                    type: Meeting
                    location: 1122 Tea Dr
                    startDateTime: "2019-08-24T14:15:22Z"
                    endDateTime: "2019-08-24T14:15:22Z"
                    isAllDayEvent: true
                    ownerUserId: 8124367fa866adafcf3166aeeb2e5ce9
      description: Update an existing Event by Id
    parameters: []
  /crm/event/details:
    get:
      summary: Get Event Details
      tags: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  fields:
                    type: array
                    items:
                      $ref: "#/components/schemas/Field"
                  nextPageCursor:
                    type: string
              examples:
                example-1:
                  value:
                    fields:
                      - key: subject
                        name: Subject
                        type: string
                        options: null
                        isArray: false
                        custom: false
                        universal: true
                        creatable: true
                        updatable: true
                    nextPageCursor: string
      operationId: get-event-details
      description: |-
        Get details about all events. 

        Details include the type, possible values, and other meta data about the fields.
      parameters:
        - schema:
            type: string
          in: query
          name: accessToken
          description: "The token for the customer's CRM account. This was generated when they connected their account."
          required: true
        - schema:
            type: string
          in: query
          name: cursor
        - schema:
            type: boolean
          in: query
          name: allFields
          description: "Returns details about native fields."
  /crm/event/attendees:
    get:
      summary: Get All Event Attendees
      tags: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  eventAttendees:
                    type: array
                    items:
                      $ref: "#/components/schemas/EventAttendee"
                  nextPageCursor:
                    type: string
              examples:
                example-1:
                  value:
                    eventAttendees:
                      - id: a064aa9181f456c0a40d2a60500cc71e
                        associatedObjectType: Contact
                        status: Confirmed
                        email: null
                        createdTime: "2019-08-24T14:15:22Z"
                        modifiedTime: "2019-08-24T14:15:22Z"
                        associations:
                          eventId: 098f19400187a6bfa2fabffc0674c6a4
                          associationId: fbdb8b1e827609f50c25b4d52a7b6f57
                        additional: {}
                    nextPageCursor: string
      operationId: get-event-attendees
      description: Retrieve all Attendees for all Events
      parameters:
        - schema:
            type: string
          in: query
          description: The token for the customer's CRM account. This was generated when they connected their account.
          name: accessToken
        - schema:
            type: string
          in: query
          name: cursor
        - schema:
            type: boolean
          in: query
          name: allFields
          description: Returns all fields including non-unifiable and custom fields under the "additional" property in the response
  /crm/event/attendee:
    get:
      summary: Get Event Attendee
      tags: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  eventAttendee:
                    $ref: "#/components/schemas/EventAttendee"
              examples:
                example-1:
                  value:
                    eventAttendee:
                      id: a064aa9181f456c0a40d2a60500cc71e
                      associatedObjectType: Contact
                      status: Confirmed
                      email: null
                      createdTime: "2019-08-24T14:15:22Z"
                      modifiedTime: "2019-08-24T14:15:22Z"
                      associations:
                        eventId: 098f19400187a6bfa2fabffc0674c6a4
                        associationId: fbdb8b1e827609f50c25b4d52a7b6f57
                      additional: {}
      operationId: get-event-attendee
      parameters:
        - schema:
            type: string
          in: query
          name: accessToken
          description: The token for the customer's CRM account. This was generated when they connected their account.
          required: true
        - schema:
            type: string
          in: query
          name: id
          required: true
        - schema:
            type: boolean
          in: query
          name: allFields
          description: Returns all fields including non-unifiable and custom fields under the "additional" property in the response
      description: Retrieve a single Event Attendee by Id
    parameters: []
    post:
      summary: Create Event Attendee
      operationId: post-event-attendee
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                  eventAttendee:
                    $ref: "#/components/schemas/EventAttendeeCreate"
              examples:
                example-1:
                  value:
                    accessToken: string
                    eventAttendee:
                      email: null
                      associatedObjectType: Contact
                      status: Declined
                      associationId: 98201f83c3f1c36dbcb36804c572c3ca
                      eventId: 7c107c9f92b6d3704afeefab581f23e8
      description: Add an Attendee to an Event
    patch:
      summary: Update Event Attendee
      operationId: put-event-attendee
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                  eventAttendee:
                    $ref: "#/components/schemas/EventAttendeeUpdate"
              examples:
                example-1:
                  value:
                    accessToken: string
                    eventAttendee:
                      status: Declined
      description: Update the status of an event attendee
  /crm/event/attendee/details:
    get:
      summary: Get Event Attendee Details
      tags: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  fields:
                    type: array
                    items:
                      $ref: "#/components/schemas/Field"
                  nextPageCursor:
                    type: string
              examples:
                example-1:
                  value:
                    fields:
                      - key: email
                        name: Email
                        type: email
                        options: null
                        isArray: false
                        custom: false
                        universal: true
                        creatable: true
                        updatable: true
                    nextPageCursor: string
      operationId: get-event-attendee-details
      description: |-
        Get details about all event attendees. 

        Details include the type, possible values, and other meta data about the fields.
      parameters:
        - schema:
            type: string
          in: query
          name: accessToken
          description: "The token for the customer's CRM account. This was generated when they connected their account."
          required: true
        - schema:
            type: string
          in: query
          name: cursor
        - schema:
            type: boolean
          in: query
          name: allFields
          description: "Returns details about native fields."
  /crm/passthrough:
    post:
      summary: Passthrough Request
      operationId: post-passthrough
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                description: ""
                type: object
                properties:
                  headers:
                    type: object
                  url:
                    type: string
                    description: The full URL that the request was sent to.
                  statusCode:
                    type: number
                    description: The HTTP status code of the response from the downstream CRM.
                  body:
                    type: any
                    description: The body of the response from the downstream CRM.
                required:
                  - id
              examples:
                example-1:
                  value:
                    headers:
                      content-type: application/json
                    url: https://mydomain.my.salesforce.com/services/data/v52.0/sobjects/Account
                    statusCode: 200
                    body:
                      id: 0011A00001XQ4QSQAZ
                      success: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                accessToken:
                  type: string
                method:
                  type: string
                  enum:
                    - GET
                    - POST
                    - PUT
                    - PATCH
                    - DELETE
                path:
                  type: string
                  description: "The sub-path to send the request to. Vessel handles the base path and domain so for a request to Salesforce instead of using `https://mydomain.my.salesforce.com/services/data/v52.0/sobjects/Account` you would use `sobjects/Account`."
                body:
                  type: object
                  description: "The body of the request."
                query:
                  type: object
                  description: "The query parameters to send with the request as key value pairs. These are appended to the URL when the request is sent to the CRM."
              required:
                - accessToken
                - method
                - path
            examples:
              example-1:
                value:
                  accessToken: string
                  method: PATCH
                  path: sobjects/Account/0011A00001XQ4ZUQA1
                  body:
                    - Name: "Vessel"
        description: ""
      description: Send an authenticated passthrough request to the downstream CRM. This is useful for making requests to endpoints that are not yet supported by Vessel.
  /link/token:
    post:
      summary: Create Link Token
      operationId: post-link-token
      responses:
        "200":
          description: Create link token
          content:
            application/json:
              schema:
                type: object
                properties:
                  linkToken:
                    type: string
              examples: {}
      description: "Generates a link token to be used during the auhtentication flow. This token is passed to either the Vessel Link Component or `useVesselLink` hook."
      security:
        - Vessel API Token: []
    parameters: []
  /link/exchange:
    post:
      summary: Exchange Public Token for Access Token
      operationId: post-link-exchange
      responses:
        "200":
          description: Exchange for access token
          content:
            application/json:
              schema:
                type: object
                properties:
                  connectionId:
                    type: string
                  accessToken:
                    type: string
                  integrationId:
                    type: string
                    enum:
                      - salesforce
                      - hubspot
                      - pipedrive
                  nativeOrgId:
                    type: string
                  nativeOrgURL:
                    type: string
                required:
                  - connectionId
                  - accessToken
                  - integrationId
                  - nativeOrgId
                  - nativeOrgURL
              examples: {}
      description: Exchanges the public token for an access token used to interact with the account. Store the access token in a secure location.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                publicToken:
                  type: string
              required:
                - publicToken
      security:
        - Vessel API Token: []
    parameters: []
  /connection/connection:
    parameters: []
    get:
      summary: Get Connection
      tags: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  connection:
                    $ref: "#/components/schemas/Connection"
      operationId: get-connection
      description: Get info about a connection for a given accessToken.
      parameters:
        - schema:
            type: string
          in: query
          name: accessToken
          description: The token for the customer's CRM account. This was generated when they connected their account.
          required: true
    delete:
      summary: Delete Connection
      operationId: delete-connection
      responses: {}
      security:
        - Vessel API Token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                accessToken:
                  type: string
      description: |-
        Remove a connection for a given `accessToken`. Removing a connection disconnects the user's CRM so they'll need to re-authenticate should they want to re-connect their CRM.

        For CRMs that support it (such as Pipedrive), removing the `accessToken` will also remove the Vessel app from their CRM.
  /connection/crm/integrations:
    get:
      summary: Get CRM Integrations
      tags: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  integrations:
                    type: array
                    items:
                      $ref: "#/components/schemas/CrmIntegration"
      operationId: get-integrations
      description: Return all of the CRM integrations supported by Vessel.
      parameters: []
    parameters: []
  /connection/connections:
    get:
      summary: Get All Connections
      tags: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  connections:
                    type: array
                    items:
                      $ref: "#/components/schemas/Connection"
      operationId: get-connections
      description: List all established connections for a workspace
  /connection/webhook:
    get:
      summary: Get Webhook
      tags: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  webhook:
                    $ref: "#/components/schemas/WebhookMetadata"
      operationId: get-webhook
      description: Retrieve information about a webhook for a given connection and id
      parameters:
        - schema:
            type: string
          in: query
          name: accessToken
          description: The token for the customer's CRM account. This was generated when they connected their account.
        - schema:
            type: string
          in: query
          name: webhookId
    post:
      summary: Create Webhook
      operationId: post-webhook
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  webhook:
                    $ref: "#/components/schemas/WebhookMetadata"
      description: Create a new webhook for a given connection
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                accessToken:
                  type: string
                webhook:
                  $ref: "#/components/schemas/WebhookMetadataCreate"
    delete:
      summary: Remove Webhook
      operationId: delete-webhook
      responses:
        "200":
          description: OK
      description: Removes a webhook for a given connection and id
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                accessToken:
                  type: string
                webhookId:
                  type: string
components:
  schemas:
    User:
      title: User
      type: object
      description: "Users of the connected CRM platform. These are *not* the contacts or leads, but rather the user accounts from the connected CRM."
      examples:
        - id: 6b48faf9e8dc534c4ca693c63e8bf8e6
          nativeId: "12"
          firstName: Micheal
          lastName: Scott
          email: micheal@dundermifflin.com
          createdTime: "2019-08-24T14:15:22Z"
          modifiedTime: "2019-08-24T14:15:22Z"
          associations:
            taskIds:
              - b3b04a80af4190796185c527e7b9933c
            noteIds:
              - eb84649fd7a5145b93c349bde55dd88d
            eventIds:
              - e5db1d3933cf1f2c207ac5d333050efe
          additional: {}
      properties:
        id:
          type: string
          description: Unique identifier for the given user
        nativeId:
          type: string
          description: Id in the downstream CRM
        firstName:
          type: string
        lastName:
          type: string
        email:
          format: email
          type: string
        createdTime:
          type: string
          format: date-time
          description: The date that the user was created
        modifiedTime:
          type: string
          format: date-time
          description: The date the user was last modified
        associations:
          type: object
          required:
            - taskIds
            - noteIds
            - eventIds
          properties:
            taskIds:
              type: array
              items:
                type: string
            noteIds:
              type: array
              items:
                type: string
            eventIds:
              type: array
              items:
                type: string
        additional:
          type: object
          description: "Returned when `allFields` is set in the query params. Includes all data, untransformed, we recieved from the downstream CRM"
      required:
        - id
        - nativeId
        - createdTime
        - modifiedTime
        - associations
    Contact:
      title: Contact
      type: object
      examples:
        - id: c064e916a0f93ddbd85c31963861d481
          nativeId: "23"
          email: tom@bluecross.com
          firstName: Tom
          lastName: Smith
          jobTitle: Director of Operations
          phone: "2101128833"
          mobilePhone: "2106541111"
          createdTime: "2019-08-24T14:15:22Z"
          modifiedTime: "2019-08-24T14:15:22Z"
          associations:
            accountIds:
              - 1fbdc2a6cb24a77f9c8843b35a00977b
            dealIds:
              - bb9c8b0f90fe8956498e5fe46f0464ee
            leadIds:
              - 710fea9e6bd3a756dc265c6d560f6bf6
            noteIds:
              - 07d76173e2285e7b75ebe23e93095d50
            taskIds:
              - 24f2bba2d256580f10095848bff0e570
            eventIds:
              - 502b5a1eab8de195a60d38610032f2c3
            eventAttendeeIds:
              - cccbc820f7ebd2525c66a69dbea198ce
          additional: {}
      description: "Information about an individual affiliated with another CRM Object (e.g., a Lead, a Deal, etc)"
      properties:
        id:
          type: string
        nativeId:
          type: string
          description: Id in the downstream CRM
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        jobTitle:
          type: string
          description: Not supported by Pipedrive.
        phone:
          type: string
          description: The primary phone number for this contact
        mobilePhone:
          type: string
          description: The primary mobile phone number for this contact. Possibly the same as the phone number.
        createdTime:
          type: string
          format: date-time
          description: The date that the contact was created
        modifiedTime:
          type: string
          format: date-time
          description: The date the contact was last modified
        associations:
          type: object
          required:
            - accountIds
            - dealIds
            - leadIds
            - noteIds
            - taskIds
            - eventIds
            - eventAttendeeIds
          properties:
            accountIds:
              type: array
              items:
                type: string
            dealIds:
              type: array
              items:
                type: string
            leadIds:
              type: array
              items:
                type: string
            noteIds:
              type: array
              items:
                type: string
            taskIds:
              type: array
              items:
                type: string
            eventIds:
              type: array
              items:
                type: string
            eventAttendeeIds:
              type: array
              items:
                type: string
        additional:
          type: object
          description: "Returned when `allFields` is set in the query params. Includes all data, untransformed, we recieved from the downstream CRM"
      required:
        - id
        - nativeId
        - createdTime
        - modifiedTime
        - associations
    Address:
      title: Address
      type: object
      properties:
        street:
          type: string
        city:
          type: string
        state:
          type: string
        postalCode:
          type: string
        country:
          type: string
      examples:
        - street: string
          city: string
          state: string
          postalCode: string
          country: string
    Deal:
      title: Deal
      type: object
      examples:
        - id: f97b667b7b53c2cae0280657a9fa4c3b
          nativeId: "84"
          name: Blue Cross Deal
          stage: demo
          amount: 10000
          closeDate: "2020-08-23T00:00:00Z"
          probability: "0.4"
          expectedRevenue: 4000
          isWon: false
          isClosed: false
          modifiedTime: "2019-08-24T14:15:22Z"
          createdTime: "2019-08-24T14:15:22Z"
          associations:
            contactIds:
              - 48fabaa6eec4d244ec0c67d7beffec41
            accountIds:
              - 8019fa47ac77b2d438d049a31727cbc5
            noteIds:
              - 0c8fd760aec8ba0ee534e9e71f3dc8f4
            taskIds:
              - 7cf4f54538b03dd8780b2b25304a788b
            eventIds:
              - 3567fd27ace6e5698258de221668d8f4
          additional: {}
      description: |-
        (Alias: Opportunity) An object representing either the opportunity to sell a product to an Account, or in the case of an `isWon` deal, a product sold to an Account.


        *CRM Caveats*:
        - Pipedrive: Users must have "Deal probability" turned on for the given pipeline for probability to be configurable and returned.
      properties:
        id:
          type: string
        nativeId:
          type: string
          description: Id in the downstream CRM
        name:
          type: string
          description: Optional name for this deal
        stage:
          type: string
          description: The stage of the pipeline the deal is in. See /deal/details for possible values
        amount:
          type: number
          description: Total deal money value
        closeDate:
          type: string
          description: When this deal is projected to be closed
          format: date-time
        probability:
          type: string
          description: Decimal probability of closing this deal.
        expectedRevenue:
          type: number
          description: probability * amount. This is a computed property
        isWon:
          type: boolean
          description: If this deal has been won. This is a computed property based on stage
        isClosed:
          type: boolean
          description: If this deal is closed (either closed-won or closed-lost). This is a computed property based on stage
        createdTime:
          type: string
          format: date-time
          description: The date that the deal was created
        modifiedTime:
          type: string
          format: date-time
          description: The date the deal was last modified
        associations:
          type: object
          required:
            - contactIds
            - accountIds
            - noteIds
            - taskIds
          properties:
            contactIds:
              type: array
              items:
                type: string
            accountIds:
              type: array
              items:
                type: string
            noteIds:
              type: array
              items:
                type: string
            taskIds:
              type: array
              items:
                type: string
            eventIds:
              type: array
              items:
                type: string
        additional:
          type: object
          description: "Returned when `allFields` is set in the query params. Includes all data, untransformed, we recieved from the downstream CRM"
      required:
        - id
        - nativeId
        - closeDate
        - createdTime
        - modifiedTime
        - associations
    Account:
      title: Account
      type: object
      examples:
        - id: b2d9eabb468030e65fa36ff7183826e0
          nativeId: "344"
          name: Blue Cross
          description: Blue Cross of Pennsylvania is responsible for providing services to the good people of Scranton
          industry: TV and Media
          annualRevenue: 10000000
          numberOfEmployees: 100
          website: www.bluecross.penn
          createdTime: "2019-08-24T14:15:22Z"
          modifiedTime: "2019-08-24T14:15:22Z"
          phone: "8192223333"
          address:
            street: 100 Blue Dr
            city: Scranton
            state: Pennsylvania
            postalCode: "281332"
            country: USA
          associations:
            dealIds:
              - c59e003883004e33204e87350ca29777
            contactIds:
              - 048a9a404f11c8ff84b4353f768d2066
            noteIds:
              - 0942a3fb764cb58539338ad56b81ca5e
            taskIds:
              - 2338ee55636bef55f0ffab4e782458d7
            leadIds:
              - 3b6e39123631efe4f82e16caab553f08
            eventIds:
              - 8de75611be060242c74b56fa7feb9d39
          additional: {}
      description: "(Alias: company, organization) An organization involved with your business."
      properties:
        id:
          type: string
        nativeId:
          type: string
          description: Id in the downstream CRM
        name:
          type: string
        description:
          type: string
          description: A description of this Company/Account. Not supported by Pipedrive
        industry:
          type: string
          description: Not supported by Pipedrive
        annualRevenue:
          type: number
          description: Not supported by Pipedrive
        numberOfEmployees:
          type: number
          description: Not supported by Pipedrive
        website:
          type: string
          description: Not supported by Pipedrive
        phone:
          type: string
          description: The primary phone number. Not supported by Pipedrive
        address:
          $ref: "#/components/schemas/Address"
        createdTime:
          type: string
          format: date-time
          description: The date that the account was created
        modifiedTime:
          type: string
          format: date-time
          description: The date the account was last modified
        associations:
          type: object
          required:
            - dealIds
            - contactIds
            - noteIds
            - taskIds
            - leadIds
            - eventIds
          properties:
            dealIds:
              type: array
              items:
                type: string
            contactIds:
              type: array
              items:
                type: string
            noteIds:
              type: array
              items:
                type: string
            taskIds:
              type: array
              items:
                type: string
            leadIds:
              type: array
              items:
                type: string
            eventIds:
              type: array
              items:
                type: string
        additional:
          type: object
          description: "Returned when `allFields` is set in the query params. Includes all data, untransformed, we recieved from the downstream CRM"
      required:
        - id
        - nativeId
        - createdTime
        - modifiedTime
        - associations
    Lead:
      title: Lead
      type: object
      description: |-
        A Lead represents an individual, or sometimes an organization, that is interested in purchasing your product (i.e., is a potential Deal). 

        *CRM Caveats*:
        - HubSpot: we consider contacts with the `leadStatus` set to be leads.
      examples:
        - id: 573de1b49555e84fccd76c47f8bac0a2
          nativeId: "23"
          firstName: Tom
          lastName: Smith
          jobTitle: Director of Operations
          email: tom@bluecross.com
          account: Blue Cross
          phone: "1234445555"
          mobilePhone: "2338889999"
          createdTime: "2019-08-24T14:15:22Z"
          modifiedTime: "2019-08-24T14:15:22Z"
          associations:
            contactIds:
              - 3e530bfc11fdb21bbc8d28dd6dde491a
            accountIds:
              - 19b2822fc02e1b032f312b1667996415
            noteIds:
              - 516ca443f07a4f6ecf32d13ac365ae61
            taskIds:
              - 09a43cce3a886c9816c782e019f8755f
            eventIds:
              - 84ef4f971bd77a046fdf4a20a89c80d6
            eventAttendeeIds:
              - 9a73be51665b57dd1d4df0edc67d5e4a
          additional: {}
      properties:
        id:
          type: string
        nativeId:
          type: string
          description: Id in the downstream CRM
        firstName:
          type: string
        lastName:
          type: string
        jobTitle:
          type: string
        email:
          type: string
        account:
          type: string
          description: Name of the Account associated with this lead
        phone:
          type: string
          description: The primary phone
        mobilePhone:
          type: string
          description: The primary mobile phone number for this lead. Possibly the same as the phone number.
        createdTime:
          type: string
          format: date-time
          description: The date that the lead was created
        modifiedTime:
          type: string
          format: date-time
          description: The date the lead was last modified
        associations:
          type: object
          required:
            - contactIds
            - accountIds
            - noteIds
            - taskIds
            - eventIds
            - eventAttendeeIds
          properties:
            contactIds:
              type: array
              items:
                type: string
            accountIds:
              type: array
              items:
                type: string
            noteIds:
              type: array
              items:
                type: string
            taskIds:
              type: array
              items:
                type: string
            eventIds:
              type: array
              items:
                type: string
            eventAttendeeIds:
              type: array
              items:
                type: string
        additional:
          type: object
          description: "Returned when `allFields` is set in the query params. Includes all data, untransformed, we recieved from the downstream CRM"
      required:
        - id
        - nativeId
        - createdTime
        - modifiedTime
        - associations
    Note:
      title: Note
      type: object
      description: "A Note attached to some CRM Object. "
      examples:
        - id: 64e620997e69e749d5fac9f6bedfd8bb
          nativeId: "34"
          content: This note has some interesting content in it!
          modifiedTime: "2019-08-24T14:15:22Z"
          createdTime: "2019-08-24T14:15:22Z"
          associations:
            dealIds:
              - 614e0d537ed844b4c1f870c0cf789aee
            contactIds:
              - cf88a16a73f1352596111c2eaa4d9cc5
            accountIds:
              - f23ac239fa5e29e04663d9cd04d08221
            leadIds:
              - 50addb0347d52e51e57e6c5406640437
            ownerUserId: fdabe0c18113ee0f2add83729401d5e2
          additional: {}
      properties:
        id:
          type: string
        nativeId:
          type: string
          description: Id in the downstream CRM
        content:
          type: string
          description: The body of the note
        createdTime:
          type: string
          format: date-time
          description: The date that the note was created
        modifiedTime:
          type: string
          format: date-time
          description: The date the note was last modified
        associations:
          type: object
          required:
            - dealIds
            - contactIds
            - accountIds
            - leadIds
            - ownerUserId
          properties:
            dealIds:
              type: array
              items:
                type: string
            contactIds:
              type: array
              items:
                type: string
            accountIds:
              type: array
              items:
                type: string
            leadIds:
              type: array
              items:
                type: string
            ownerUserId:
              type: string
              description: The Id of the User that owns this note
        additional:
          type: object
          description: "Returned when `allFields` is set in the query params. Includes all data, untransformed, we recieved from the downstream CRM"
      required:
        - id
        - nativeId
        - createdTime
        - modifiedTime
        - associations
    Task:
      title: Task
      type: object
      description: A task attached to some CRM object
      examples:
        - id: b5a4e4a2d54c0b2391162954f1ff76a2
          nativeId: "122"
          body: This task needs to be done very soon!
          subject: High Priority Task
          isDone: false
          dueDate: "2019-09-24T14:15:22Z"
          status: Not Done
          priority: High
          modifiedTime: "2019-08-24T14:15:22Z"
          createdTime: "2019-08-24T14:15:22Z"
          associations:
            dealIds:
              - d3eb15b42607b6147596c226166c7ba2
            contactIds:
              - 3bd3cf14ee9cc889269c52e3f4018b27
            accountIds:
              - 432ba6928b33aecfca646431e68dc829
            leadIds:
              - afa79f2dda94b0e5b48b930fa05ceafa
            ownerUserId: 25db6b521ffb8fd4f916345341a935f7
          additional: {}
      properties:
        id:
          type: string
        nativeId:
          type: string
          description: Id in the downstream CRM
        body:
          type: string
        subject:
          type: string
        isDone:
          type: boolean
        dueDate:
          type: string
        status:
          type: string
          description: not supported by Pipedrive
        priority:
          type: string
          description: not supported by Pipedrive
        createdTime:
          type: string
          format: date-time
          description: The date that the task was created
        modifiedTime:
          type: string
          format: date-time
          description: The date the task was last modified
        associations:
          type: object
          required:
            - dealIds
            - contactIds
            - accountIds
            - leadIds
            - ownerUserId
          properties:
            dealIds:
              type: array
              items:
                type: string
            contactIds:
              type: array
              items:
                type: string
            accountIds:
              type: array
              items:
                type: string
            leadIds:
              type: array
              items:
                type: string
            ownerUserId:
              type: string
              description: The Id of the User that owns this Task
        additional:
          type: object
          description: "Returned when `allFields` is set in the query params. Includes all data, untransformed, we recieved from the downstream CRM"
      required:
        - id
        - nativeId
        - createdTime
        - modifiedTime
        - associations
    Event:
      title: Event
      type: object
      description: |-
        Events are a type of activity that has attendees and takes place at a certain point in time (i.e., has a start and end date).

        For the currently supported CRMs, these are the objects Events most closely maps to:
        - Salesforce = Events
        - HubSpot = Meetings
        - Pipedrive = Activities
      examples:
        - id: 18e81ebacaf668919bf5bfb450e46e70
          nativeId: "19"
          subject: Meeting with Blue Cross
          description: Going to get tea with Tom from Blue Cross to discuss his paper needs
          type: Meeting
          location: 1122 Tea Dr
          startDateTime: "2019-08-24T14:15:22Z"
          endDateTime: "2019-08-24T14:15:22Z"
          isAllDayEvent: true
          createdTime: "2019-08-24T14:15:22Z"
          modifiedTime: "2019-08-24T14:15:22Z"
          associations:
            accountIds:
              - 48e360b6458763af2fabe1468580162a
            leadIds:
              - e4292594a425de320dccf0ff4dd1bb99
            contactIds:
              - 3fd7f63bfcda56afe955220b370b0e86
            dealIds:
              - 1fef18eba546440ec37e504bc411262e
            eventAttendeeIds:
              - 9c315a6f3669114b8d0641f91e85647b
            ownerUserId: 5561946e7c65ba50544584543859074c
          additional: {}
      properties:
        id:
          type: string
        nativeId:
          type: string
          description: Id in the downstream CRM
        subject:
          type: string
        description:
          type: string
        type:
          type: string
        location:
          type: string
          description: Where this event takes place. Can be virtual
        startDateTime:
          type: string
          format: date-time
        endDateTime:
          type: string
          format: date-time
        isAllDayEvent:
          type: boolean
        createdTime:
          type: string
          format: date-time
          description: The date that the event was created
        modifiedTime:
          type: string
          format: date-time
          description: The date the event was last modified
        associations:
          type: object
          required:
            - accountIds
            - leadIds
            - contactIds
            - dealIds
            - eventAttendeeIds
            - ownerUserId
          properties:
            accountIds:
              type: array
              items:
                type: string
            leadIds:
              type: array
              items:
                type: string
            contactIds:
              type: array
              items:
                type: string
            dealIds:
              type: array
              items:
                type: string
            eventAttendeeIds:
              type: array
              items:
                type: string
            ownerUserId:
              type: string
              description: The Id of the User that owns this event
        additional:
          type: object
          description: "Returned when `allFields` is set in the query params. Includes all data, untransformed, we recieved from the downstream CRM"
      required:
        - id
        - nativeId
        - createdTime
        - modifiedTime
        - associations
    EventAttendee:
      title: EventAttendee
      type: object
      description: "Event Attendees hold information about someone who attendeed or was invited to an event. Attendees are always associated with some Event and another person object such as a Contact, Lead, or Other."
      examples:
        - id: a064aa9181f456c0a40d2a60500cc71e
          associatedObjectType: Contact
          status: Confirmed
          email: null
          createdTime: "2019-08-24T14:15:22Z"
          modifiedTime: "2019-08-24T14:15:22Z"
          associations:
            eventId: 098f19400187a6bfa2fabffc0674c6a4
            associationId: fbdb8b1e827609f50c25b4d52a7b6f57
          additional: {}
      properties:
        id:
          type: string
        nativeId:
          type: string
          description: Id in the downstream CRM
        status:
          type: string
        associatedObjectType:
          type: string
          description: "The object type of the associated object (e.g., Contact, Lead, etc) or Other if this Attendee is not associated with a CRM object"
        email:
          type: string
          description: Optional unless `associationId` is null
        createdTime:
          type: string
          format: date-time
          description: The date that the event attendee was created
        modifiedTime:
          type: string
          format: date-time
          description: The date the event attendee was last modified
        associations:
          type: object
          required:
            - eventId
            - associationId
          properties:
            eventId:
              type: string
            associationId:
              type: string
              description: "The id of the associated object, if this Attendee is not associated with a CRM object, this id is null and the `email` field will be present"
        additional:
          type: object
          description: "Returned when `allFields` is set in the query params. Includes all data, untransformed, we recieved from the downstream CRM"
      required:
        - id
        - nativeId
        - associatedObjectType
        - createdTime
        - modifiedTime
        - associations
    Field:
      title: Field
      type: object
      description: |-
        (Alias: property) A field is a key-value pair on a CRM Object that provides information about that object.
      properties:
        key:
          type: string
          description: "The key in the CRM object (ex: annualRevenue, numberOfEmployees, etc)"
        name:
          type: string
          description: "The display name of this field (ex: number of employees, annual revenue, etc)"
        type:
          type: string
          enum:
            - string
            - number
            - datetime
            - date
            - boolean
            - reference
            - phone
            - url
            - id
            - email
            - percent
            - singleselect
            - multiselect
            - address
            - daterange
            - decimal
            - time
            - daterange
            - object
        options:
          type: array
          description: Possible options for this field
          items:
            type: object
            properties:
              key:
                type: string | number
              name:
                type: string
        isArray:
          type: boolean
          description: If this field is an array
        custom:
          type: boolean
          description: If this field is a custom field
        universal:
          type: boolean
          description: If this is a field we've unified across CRMs
        creatable:
          type: boolean
          description: If this field can be used when creating the object
        updatable:
          type: boolean
          description: If this field can be updated
      required:
        - key
        - name
        - type
        - custom
        - universal
        - creatable
        - updatable
      examples:
        - key: numberOfEmployees
          name: number of employees
          type: number
          options: null
          isArray: false
          custom: false
          universal: true
          creatable: true
          updatable: true
    EventAttendeeCreate:
      title: EventAttendeeCreate
      type: object
      description: ""
      examples:
        - email: null
          associatedObjectType: Contact
          status: Declined
          associationId: 98201f83c3f1c36dbcb36804c572c3ca
          eventId: 7c107c9f92b6d3704afeefab581f23e8
      properties:
        email:
          type: string
          description: 'Required if associationId is not present and the CRM supports "Other" for attendee associatedObjectType '
        associatedObjectType:
          type: string
          description: "The object type of the associated object (e.g., Contact, Lead, etc) or Other if this Attendee is not associated with a CRM object"
        status:
          type: string
        associationId:
          type: string
          description: Required unless email is present and CRM supports "Other" for associatedObjectType
        eventId:
          type: string
        additional:
          type: object
          description: "Create any property in the downstream CRM, such as a custom or native property. For a list of all properties see /details."
      required:
        - associatedObjectType
        - eventId
    EventAttendeeUpdate:
      title: EventAttendeeUpdate
      type: object
      properties:
        status:
          type: string
      examples:
        - status: Declined
      description: ""
    EventCreate:
      title: EventCreate
      type: object
      description: ""
      properties:
        subject:
          type: string
        description:
          type: string
        type:
          type: string
        location:
          type: string
        startDateTime:
          type: string
        endDateTime:
          type: string
        isAllDayEvent:
          type: boolean
          description: Not supported by HubSpot and Pipedrive
        dealId:
          type: string
        accountId:
          type: string
        contactId:
          type: string
        leadId:
          type: string
        ownerUserId:
          type: string
        additional:
          type: object
          description: "Create any property in the downstream CRM, such as a custom or native property. For a list of all properties see /details."
      required:
        - startDateTime
        - endDateTime
      examples:
        - subject: Meeting with Blue Cross
          description: Going to get tea with Tom from Blue Cross to discuss his paper needs
          type: Meeting
          location: 1122 Tea Dr
          startDateTime: "2019-08-24T14:15:22Z"
          endDateTime: "2019-08-24T14:15:22Z"
          isAllDayEvent: true
          dealId: 1fef18eba546440ec37e504bc411262e
          accountId: 48e360b6458763af2fabe1468580162a
          contactId: 3fd7f63bfcda56afe955220b370b0e86
          leadId: e4292594a425de320dccf0ff4dd1bb99
          ownerUserId: 5561946e7c65ba50544584543859074c
    EventUpdate:
      title: EventUpdate
      type: object
      properties:
        subject:
          type: string
        description:
          type: string
        type:
          type: string
        location:
          type: string
        startDateTime:
          type: string
        endDateTime:
          type: string
        isAllDayEvent:
          type: boolean
          description: Not supported by HubSpot and Pipedrive
        ownerUserId:
          type: string
        additional:
          type: object
          description: "Create any property in the downstream CRM, such as a custom or native property. For a list of all properties see /details."
      examples:
        - subject: Meeting with Blue Cross
          description: Going to get tea with Tom from Blue Cross to discuss his paper needs
          type: Meeting
          location: 1122 Tea Dr
          startDateTime: "2019-08-24T14:15:22Z"
          endDateTime: "2019-08-24T14:15:22Z"
          isAllDayEvent: true
          ownerUserId: 8124367fa866adafcf3166aeeb2e5ce9
    TaskCreate:
      title: TaskCreate
      type: object
      description: ""
      examples:
        - body: This task needs to be done very soon!
          subject: High Priority Task
          dueDate: "2019-09-24T14:15:22Z"
          isDone: false
          userId: 25db6b521ffb8fd4f916345341a935f7
          leadId: afa79f2dda94b0e5b48b930fa05ceafa
          dealId: d3eb15b42607b6147596c226166c7ba2
          accountId: 432ba6928b33aecfca646431e68dc829
          contactId: 3bd3cf14ee9cc889269c52e3f4018b27
          priority: High
          status: Not Done
      properties:
        body:
          type: string
        subject:
          type: string
        dueDate:
          type: string
        userId:
          type: string
          description: The user to assign this note to. If there is no userId provided, the behavior is defined by the downstream system (either assigned to no user or to the user that installed the app).
        leadId:
          type: string
          description: Can only set either leadId or dealId but not both.
        dealId:
          type: string
          description: Can only set either leadId or dealId but not both.
        accountId:
          type: string
        contactId:
          type: string
        priority:
          type: string
          description: not supported by Pipedrive
        status:
          type: string
          description: not supported by Pipedrive
        isDone:
          type: boolean
          description: "If both `isDone` and `status` are included, `isDone` will take precedence and automatically set `status` to either the default or a 'closed' status depending on the `isDone` value."
        additional:
          type: object
          description: "Create any property in the downstream CRM, such as a custom or native property. For a list of all properties see /details."
    TaskUpdate:
      title: TaskUpdate
      type: object
      description: ""
      examples:
        - body: This task needs to be done very soon!
          subject: High Priority Task
          dueDate: "2019-09-24T14:15:22Z"
          isDone: false
          userId: 25db6b521ffb8fd4f916345341a935f7
          priority: High
          status: Not Done
      properties:
        body:
          type: string
        subject:
          type: string
        dueDate:
          type: string
        userId:
          type: string
        priority:
          type: string
          description: not supported by Pipedrive
        status:
          type: string
          description: not supported by Pipedrive
        isDone:
          type: boolean
          description: "If both `isDone` and `status` are included, `isDone` will take precedence and automatically set `status` to either the default or a 'closed' status depending on the `isDone` value."
        additional:
          type: object
          description: "Create any property in the downstream CRM, such as a custom or native property. For a list of all properties see /details."
    ContactUpdate:
      title: ContactUpdate
      type: object
      examples:
        - email: tom@bluecross.com
          firstName: Tom
          lastName: Smith
          jobTitle: Director of Operations
          phone: "2101128833"
          mobilePhone: "2106541111"
      description: Update a Contact.
      properties:
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        jobTitle:
          type: string
          description: Not supported by Pipedrive
        phone:
          type: string
          description: The primary phone
        mobilePhone:
          type: string
        additional:
          type: object
          description: "Create any property in the downstream CRM, such as a custom or native property. For a list of all properties see /details."
    ContactCreate:
      title: ContactCreate
      type: object
      examples:
        - email: tom@bluecross.com
          firstName: Tom
          lastName: Smith
          jobTitle: Director of Operations
          phone: "2101128833"
          mobilePhone: "2106541111"
      description: Properties that a contact can be created with
      properties:
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        jobTitle:
          type: string
          description: Not supported by Pipedrive
        phone:
          type: string
          description: The primary phone
        mobilePhone:
          type: string
        additional:
          type: object
          description: "Create any property in the downstream CRM, such as a custom or native property. For a list of all properties see /details."
      required:
        - lastName
    DealUpdate:
      title: DealUpdate
      type: object
      examples:
        - name: Blue Cross Deal
          amount: 10000
          closeDate: "2020-08-23T00:00:00Z"
          probability: "0.4"
      properties:
        name:
          type: string
        amount:
          type: number
        closeDate:
          type: string
        probability:
          type: string
          description: Decimal probability of closing the deal
        stage:
          type: string
          description: The stage the deal is in. See /deal/details for possible values
        accountId:
          type: string
          description: Update the account this deal is associated with.
        additional:
          type: object
          description: "Create any property in the downstream CRM, such as a custom or native property. For a list of all properties see /details."
      required:
        - name
        - closeDate
    DealCreate:
      title: DealCreate
      type: object
      examples:
        - name: Blue Cross Deal
          amount: 10000
          closeDate: "2020-08-23T00:00:00Z"
          probability: "0.4"
          stage: closedwon
      properties:
        name:
          type: string
        amount:
          type: number
        closeDate:
          type: string
        probability:
          type: string
          description: Decimal probability of closing the deal
        stage:
          type: string
          description: The stage the deal is in. See /deal/details for possible value
        accountId:
          type: string
          description: The Id of the account to associate this deal with
        additional:
          type: object
          description: "Create any property in the downstream CRM, such as a custom or native property. For a list of all properties see /details."
      required:
        - name
        - closeDate
    AccountUpdate:
      title: AccountUpdate
      type: object
      examples:
        - name: Blue Cross
          description: Blue Cross of Pennsylvania is responsible for providing services to the good people of Scranton
          industry: TV and Media
          annualRevenue: 10000000
          numberOfEmployees: 100
          website: www.bluecross.penn
          createdTime: "2019-08-24T14:15:22Z"
          modifiedTime: "2019-08-24T14:15:22Z"
          phone: "8192223333"
          address:
            street: 100 Blue Dr
            city: Scranton
            state: Pennsylvania
            postalCode: "281332"
            country: USA
      properties:
        name:
          type: string
          description: Required by Pipedrive
        description:
          type: string
          description: Not supported by Pipedrive
        industry:
          type: string
          description: Not supported by Pipedrive
        website:
          type: string
          description: Not supported by Pipedrive
        numberOfEmployees:
          type: number
          description: Not supported by Pipedrive
        annualRevenue:
          type: number
          description: Not supported by Pipedrive
        phone:
          type: string
          description: The primary phone| Not supported by Pipedrive
        address:
          $ref: "#/components/schemas/Address"
        additional:
          type: object
          description: "Create any property in the downstream CRM, such as a custom or native property. For a list of all properties see /details."
    AccountCreate:
      title: AccountCreate
      type: object
      examples:
        - name: Blue Cross
          description: Blue Cross of Pennsylvania is responsible for providing services to the good people of Scranton
          industry: TV and Media
          annualRevenue: 10000000
          numberOfEmployees: 100
          website: www.bluecross.penn
          phone: "8192223333"
          address:
            street: 100 Blue Dr
            city: Scranton
            state: Pennsylvania
            postalCode: "281332"
            country: USA
      properties:
        name:
          type: string
        description:
          type: string
          description: Not supported by Pipedrive
        industry:
          type: string
          description: Not supported by Pipedrive
        website:
          type: string
          description: Not supported by Pipedrive
        numberOfEmployees:
          type: number
          description: Not supported by Pipedrive
        annualRevenue:
          type: number
          description: Not supported by Pipedrive
        phone:
          type: string
          description: The primary phone | Not supported by Pipedrive
        address:
          $ref: "#/components/schemas/Address"
        additional:
          type: object
          description: "Create any property in the downstream CRM, such as a custom or native property. For a list of all properties see /details."
      required:
        - name
    NoteCreate:
      title: NoteCreate
      type: object
      description: Create a new Note. You may only associate a note with at most one entity of each type upon creation.
      examples:
        - content: This note has some interesting content in it!
          userId: fdabe0c18113ee0f2add83729401d5e2
          dealId: 614e0d537ed844b4c1f870c0cf789aee
          leadId: 50addb0347d52e51e57e6c5406640437
          accountId: f23ac239fa5e29e04663d9cd04d08221
          contactId: cf88a16a73f1352596111c2eaa4d9cc5
      properties:
        content:
          type: string
        userId:
          type: string
          description: The user to assign this note to. If there is no userId provided, the behavior is defined by the downstream system (either assigned to no user or to the user that installed the app).
        dealId:
          type: string
          description: Required unless leadId/accountId/contactId are specified.
        leadId:
          type: string
          description: Required unless dealId/accountId/contactId are specified.
        accountId:
          type: string
          description: Required unless leadId/dealId/contactId are specified.
        contactId:
          type: string
          description: Required unless leadId/accountId/dealId are specified.
        additional:
          type: object
          description: "Create any property in the downstream CRM, such as a custom or native property. For a list of all properties see /details."
      required:
        - content
    NoteUpdate:
      title: NoteUpdate
      type: object
      description: Update an existing Note. Please note that updating associations is not currently supported.
      examples:
        - content: This note has some interesting content in it!
          userId: fdabe0c18113ee0f2add83729401d5e2
      properties:
        content:
          type: string
        userId:
          type: string
          description: Only Admins can change this property
        additional:
          type: object
          description: "Create any property in the downstream CRM, such as a custom or native property. For a list of all properties see /details."
    LeadUpdate:
      description: ""
      type: object
      x-examples:
        example-1:
          firstName: string
          lastName: string
          jobTitle: string
          email: string
          phones:
            - value: "0001112222"
              type: Home
          modifiedTime: string
          createdTime: string
      examples:
        - firstName: Tom
          lastName: Smith
          jobTitle: Director of Operations
          email: tom@bluecross.com
          account: Blue Cross
          phone: "1234445555"
          mobilePhone: "2338889999"
      title: LeadUpdate
      properties:
        firstName:
          type: string
          description: Not supported for Pipedrive
        lastName:
          type: string
          description: Not supported for Pipedrive
        jobTitle:
          type: string
        email:
          type: string
          description: Not supported for Pipedrive
        account:
          type: string
          description: Name of the Account associated with this lead. Not supported for Pipedrive
        phone:
          type: string
          description: The primary phone. Not supported for Pipedrive
        mobilePhone:
          type: string
          description: The primary mobile phone number for this lead. Possibly the same as the phone number. Not supported for Pipedrive
        additional:
          type: object
          description: "Create any property in the downstream CRM, such as a custom or native property. For a list of all properties see /details."
      required:
        - lastName
    LeadCreate:
      description: ""
      type: object
      x-examples:
        example-1:
          firstName: Tony
          lastName: Stark
          jobTitle: CEO
          email: tony@starkindustries.com
          phones:
            - value: "0001112222"
              type: Home
      examples:
        - firstName: Tom
          lastName: Smith
          jobTitle: Director of Operations
          email: tom@bluecross.com
          account: Blue Cross
          phone: "1234445555"
          mobilePhone: "2338889999"
      title: LeadCreate
      properties:
        firstName:
          type: string
        lastName:
          type: string
        jobTitle:
          type: string
        email:
          type: string
        account:
          type: string
          description: "Name of the Account associated with this lead. Not supported for Pipedrive. Defaults to `[TODO]: Fill in Company Name` in Salesforce"
        phone:
          type: string
          description: The primary phone number for this lead
        mobilePhone:
          type: string
          description: The primary mobile phone number for this lead. Possibly the same as the phone number.
        additional:
          type: object
          description: "Create any property in the downstream CRM, such as a custom or native property. For a list of all properties see /details."
      required:
        - lastName
    CrmIntegration:
      title: CrmIntegration
      type: object
      properties:
        integrationId:
          type: string
          enum:
            - salesforce
            - hubspot
            - pipedrive
        name:
          type: string
        iconURL:
          type: string
          description: Base 64 data URI
      examples:
        - integrationId: hubspot
          name: Hubspot
          iconURL: string
    WebhookMetadataCreate:
      title: WebhookMetadataCreate
      type: object
      description: Information describing a webhook
      properties:
        webhookUrl:
          type: string
          description: a valid URL
    WebhookMetadata:
      title: WebhookMetadata
      type: object
      properties:
        webhookId:
          type: string
        connectionId:
          type: string
        webhookUrl:
          type: string
        createdTime:
          type: string
          format: date-time
    Connection:
      title: Connection
      type: object
      properties:
        integrationId:
          type: string
          enum:
            - salesforce
            - hubspot
            - pipedrive
        connectionId:
          type: string
        createdTime:
          type: string
        status:
          type: string
          enum:
            - NEW_CONNECTION
            - INITIAL_SYNC
            - READY
        nativeOrgURL:
          type: string
  securitySchemes:
    VesselAPIToken:
      name: vessel-api-token
      type: apiKey
      in: header
security:
  - VesselAPIToken: []
